name: Deploy to PostgreServer

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  Deploy_to_postgre:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install PostgreSQL client on runner
        run: choco install postgresql --yes

      - name: Verify PostgreSQL installation directory
        run: |
          dir "C:\Program Files\PostgreSQL\13\bin"
          dir "C:\Program Files\PostgreSQL"

      - name: Add PostgreSQL to path
        shell: cmd
        run: |
          setx path "%path%;C:\Program Files\PostgreSQL\13\bin"
          refreshenv
          echo %path%

      - name: Check Path Environment Variable
        shell: pwsh
        run: echo $env:path

      - name: Verify PostgreSQL installation
        shell: pwsh
        run: |
          if (Get-Command psql -ErrorAction SilentlyContinue) {
            Write-Output "psql is available."
          } else {
            Write-Output "psql is not available."
            exit 1
          }

      - name: Run SQL scripts
        if: success()
        env: 
          PGHOST: ${{ secrets.CBS_HOSTN }}
          PGPORT: ${{ secrets.CBS_PORT }}
          PGUSER: ${{ secrets.CBS_USERNAME }}
          PGPASSWORD: ${{ secrets.CBS_WW }}
          PGDATABASE: ${{ secrets.CBS_DBNAME }}
        shell: pwsh
        run: |
          $env:PGPASSWORD = "${{ secrets.CBS_WW }}"
          $sqlFiles = Get-ChildItem -Path DDL\*.sql
          if ($sqlFiles.Count -eq 0) {
            Write-Output "No SQL files found in DDL directory."
            exit 1
          }
          foreach ($file in $sqlFiles) {
            Write-Output "Running $($file.FullName)..."
            psql -h $env:PGHOST -p $env:PGPORT -U $env:PGUSER -d $env:PGDATABASE -f $file.FullName
          }
